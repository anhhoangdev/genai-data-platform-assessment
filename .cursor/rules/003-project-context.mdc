---
description: "Project priorities, deliverables mapping, and workflow expectations"
alwaysApply: true
tags: [priorities, deliverables, workflow]
---

# Project Overview

## Priorities
### Must Complete
- **A01** — GCP Infrastructure (Terraform, IAM, VPC, GKE, FreeIPA, NFS)
- **A02** — Scalable Python Job Cluster (Dask)
- **B01** — Vector DB Tutorial (internal training)

### Optional
- **A03** — Metaflow ML Pipeline Platform

---

## Deliverables

### Report Files (1000–1500 lines each)
```

docs/reports/
A01/  -> report\_A01.md + parts + prompt docs
A02/  -> report\_A02.md + parts + prompt docs
B01/  -> report\_B01.md + parts + prompt docs

```

### Prompt Logs
```

prompt\_logs/
prompt\_<task>*main.md
prompt*<task>*partXX*<topic>.md

```

### Code Roots
- `terraform/` — A01 infra code
- `dask-cluster/` — A02 compute platform
- `vector-db-tutorial/` — B01 educational content

---

## Documentation Rules
- Follow `docs/ctx_doc_style.md` format.
- 1000–1500 lines per report/part.
- Multi-audience: engineers + business.
- Include architecture diagrams, Gantt charts, and integration flows (Mermaid).
- Maintain a consistent terminology section.

---

## Workflow
1. **Read Memory Bank** before any work:
```
memory-bank/projectbrief.md
memory-bank/productContext.md
memory-bank/techContext.md
memory-bank/systemPatterns.md
memory-bank/activeContext.md
memory-bank/progress.md

```
2. **Update Planning**:
- `planning/backlog.md`
- `planning/decisions/ADR-*.md`
- `planning/workflow_state.md`
3. **Prompt Logging**:
- Log every GenAI interaction in `docs/AI_PROMPT_LOG.md`
- Store full prompt/response in `prompt_logs/`

---

## Visualization Requirements
- **Architecture diagrams** — infra topology, integration points.
- **Timeline** — Gantt chart with milestones & dependencies.
- **Workflow diagrams** — component interaction & ops flows.
- Include diagrams inline or in linked `.mmd` files.

## Documentation Standards
- **Technical-first**: Comprehensive infra design for engineers + business stakeholders.
- **Multi-audience clarity**: Use plain explanations alongside technical detail.
- **Terminology consistency**: Create glossary and reuse terms exactly.
- **Standardized frameworks**: Follow ctx_doc_style.md for all docs.
- **Cross-functional communication**: Explain complex infra in business-relevant terms.
- **Accountability**: Show delivery commitments + timeline management.
- **Stakeholder alignment**: Keep all parties informed on progress.

## Visualization Standards
- **Architecture diagrams**: Show system integration, components, topology.
- **Gantt charts**: Milestones, dependencies, deployment sequence.
- **Coordination charts**: Workflow, dependencies, integration patterns.
- **Stakeholder visuals**: High-level progress updates for execs.
- **Mermaid diagrams**: Architecture, flows, integrations.
- **Integration visuals**: Embed diagrams in reports or attach separately.

## Submission Standards
- **Main reports**: `report_<task>.md` (≥1000 lines, technical architecture focus).
- **Part files**: `report_<task>_partXX_<name>.md` (1000–1500 lines each).
- **Prompt files**: `report_<task>_prompt.md` or per-part prompt files.
- **AI planning docs**: Show strategic GenAI usage in prompt files.
- **Task selection**: ≥1 from List A (mandatory), List B optional.
- **Supplementary materials**: Code snippets, infra plans, diagrams.
- **GenAI utilization**: Document how AI tools were applied to meet technical + doc standards.

---

## Assessment Checklist
- [ ] All required files created in correct directories.
- [ ] Each main report ≥ 1000 lines, with part files also ≥ 1000 lines.
- [ ] Prompts documented for every task/part.
- [ ] Memory Bank reviewed before work starts.
- [ ] Planning and progress docs updated.
- [ ] Diagrams included (architecture, Gantt, flows).
```